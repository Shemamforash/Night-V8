// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using UnityEngine;
using System.Collections.Generic;
using Articy.Unity.Interfaces;
using Articy.Unity;
using Articy.Night.Features;
using Articy.Night;

namespace Articy.Night.Templates
{
    
    
    [Serializable()]
    public class EnvironmentTemplateTemplate : IArticyBaseObject, IPropertyProvider
    {
        
        [SerializeField()]
        private ArticyValueJournalEntryFeature mJournalEntry = new ArticyValueJournalEntryFeature();
        
        [SerializeField()]
        private ArticyValueEnvironmentFeature mEnvironment = new ArticyValueEnvironmentFeature();
        
        public Articy.Night.Features.JournalEntryFeature JournalEntry
        {
            get
            {
                return mJournalEntry.GetValue();
            }
            set
            {
                mJournalEntry.SetValue(value);
            }
        }
        
        public Articy.Night.Features.EnvironmentFeature Environment
        {
            get
            {
                return mEnvironment.GetValue();
            }
            set
            {
                mEnvironment.SetValue(value);
            }
        }
        
        private void CloneProperties(object aClone)
        {
            Articy.Night.Templates.EnvironmentTemplateTemplate newClone = ((Articy.Night.Templates.EnvironmentTemplateTemplate)(aClone));
            if ((JournalEntry != null))
            {
                newClone.JournalEntry = ((Articy.Night.Features.JournalEntryFeature)(JournalEntry.CloneObject()));
            }
            if ((Environment != null))
            {
                newClone.Environment = ((Articy.Night.Features.EnvironmentFeature)(Environment.CloneObject()));
            }
        }
        
        public object CloneObject()
        {
            Articy.Night.Templates.EnvironmentTemplateTemplate clone = new Articy.Night.Templates.EnvironmentTemplateTemplate();
            CloneProperties(clone);
            return clone;
        }
        
        public virtual bool IsLocalizedPropertyOverwritten(string aProperty)
        {
            return false;
        }
        
        #region property provider interface
        public void setProp(string aProperty, object aValue)
        {
            int featureIndex = aProperty.IndexOf('.');
            if ((featureIndex != -1))
            {
                string featurePath = aProperty.Substring(0, featureIndex);
                string featureProperty = aProperty.Substring((featureIndex + 1));
                if ((featurePath == "JournalEntry"))
                {
                    JournalEntry.setProp(featureProperty, aValue);
                }
                if ((featurePath == "Environment"))
                {
                    Environment.setProp(featureProperty, aValue);
                }
            }
        }
        
        public Articy.Unity.Interfaces.ScriptDataProxy getProp(string aProperty)
        {
            int featureIndex = aProperty.IndexOf('.');
            if ((featureIndex != -1))
            {
                string featurePath = aProperty.Substring(0, featureIndex);
                string featureProperty = aProperty.Substring((featureIndex + 1));
                if ((featurePath == "JournalEntry"))
                {
                    return JournalEntry.getProp(featureProperty);
                }
                if ((featurePath == "Environment"))
                {
                    return Environment.getProp(featureProperty);
                }
            }
            return null;
        }
        #endregion
    }
}
