// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using UnityEngine;
using System.Collections.Generic;
using Articy.Unity.Interfaces;
using Articy.Unity;
using Articy.Night;

namespace Articy.Night.Features
{
    
    
    [Serializable()]
    public class EnvironmentFeature : IArticyBaseObject, IPropertyProvider
    {
        
        [SerializeField()]
        private String mEnvironmentName;
        
        [SerializeField()]
        private EnvironmentType mEnvironmentType = new EnvironmentType();
        
        [SerializeField()]
        private Single mEnvironmentMinTemperature;
        
        [SerializeField()]
        private Single mEnvironmentMaxTemperature;
        
        [SerializeField()]
        private Single mEnvironmentWaterLevel;
        
        [SerializeField()]
        private Single mEnvironmentFoodLevel;
        
        [SerializeField()]
        private Single mEnvironmentFuelLevel;
        
        [SerializeField()]
        private Single mEnvironmentScrapLevel;
        
        [SerializeField()]
        private Single mEnvironmentBanditDanger;
        
        [SerializeField()]
        private Single mEnvironmentTerrainAccessibility;
        
        [SerializeField()]
        private Single mEnvironmentCampFrequency;
        
        [SerializeField()]
        private Boolean mEnvironmentMentalDanger = new Boolean();
        
        [SerializeField()]
        private Boolean mEnvironmentAnimalDanger = new Boolean();
        
        [SerializeField()]
        private Boolean mEnvironmentTrapDanger = new Boolean();
        
        [SerializeField()]
        private Boolean mEnvironmentRadiationDanger = new Boolean();
        
        public String EnvironmentName
        {
            get
            {
                return mEnvironmentName;
            }
            set
            {
                mEnvironmentName = value;
            }
        }
        
        public EnvironmentType EnvironmentType
        {
            get
            {
                return mEnvironmentType;
            }
            set
            {
                mEnvironmentType = value;
            }
        }
        
        public Single EnvironmentMinTemperature
        {
            get
            {
                return mEnvironmentMinTemperature;
            }
            set
            {
                mEnvironmentMinTemperature = value;
            }
        }
        
        public Single EnvironmentMaxTemperature
        {
            get
            {
                return mEnvironmentMaxTemperature;
            }
            set
            {
                mEnvironmentMaxTemperature = value;
            }
        }
        
        public Single EnvironmentWaterLevel
        {
            get
            {
                return mEnvironmentWaterLevel;
            }
            set
            {
                mEnvironmentWaterLevel = value;
            }
        }
        
        public Single EnvironmentFoodLevel
        {
            get
            {
                return mEnvironmentFoodLevel;
            }
            set
            {
                mEnvironmentFoodLevel = value;
            }
        }
        
        public Single EnvironmentFuelLevel
        {
            get
            {
                return mEnvironmentFuelLevel;
            }
            set
            {
                mEnvironmentFuelLevel = value;
            }
        }
        
        public Single EnvironmentScrapLevel
        {
            get
            {
                return mEnvironmentScrapLevel;
            }
            set
            {
                mEnvironmentScrapLevel = value;
            }
        }
        
        public Single EnvironmentBanditDanger
        {
            get
            {
                return mEnvironmentBanditDanger;
            }
            set
            {
                mEnvironmentBanditDanger = value;
            }
        }
        
        public Single EnvironmentTerrainAccessibility
        {
            get
            {
                return mEnvironmentTerrainAccessibility;
            }
            set
            {
                mEnvironmentTerrainAccessibility = value;
            }
        }
        
        public Single EnvironmentCampFrequency
        {
            get
            {
                return mEnvironmentCampFrequency;
            }
            set
            {
                mEnvironmentCampFrequency = value;
            }
        }
        
        public Boolean EnvironmentMentalDanger
        {
            get
            {
                return mEnvironmentMentalDanger;
            }
            set
            {
                mEnvironmentMentalDanger = value;
            }
        }
        
        public Boolean EnvironmentAnimalDanger
        {
            get
            {
                return mEnvironmentAnimalDanger;
            }
            set
            {
                mEnvironmentAnimalDanger = value;
            }
        }
        
        public Boolean EnvironmentTrapDanger
        {
            get
            {
                return mEnvironmentTrapDanger;
            }
            set
            {
                mEnvironmentTrapDanger = value;
            }
        }
        
        public Boolean EnvironmentRadiationDanger
        {
            get
            {
                return mEnvironmentRadiationDanger;
            }
            set
            {
                mEnvironmentRadiationDanger = value;
            }
        }
        
        private void CloneProperties(object aClone)
        {
            Articy.Night.Features.EnvironmentFeature newClone = ((Articy.Night.Features.EnvironmentFeature)(aClone));
            newClone.EnvironmentName = EnvironmentName;
            newClone.EnvironmentType = EnvironmentType;
            newClone.EnvironmentMinTemperature = EnvironmentMinTemperature;
            newClone.EnvironmentMaxTemperature = EnvironmentMaxTemperature;
            newClone.EnvironmentWaterLevel = EnvironmentWaterLevel;
            newClone.EnvironmentFoodLevel = EnvironmentFoodLevel;
            newClone.EnvironmentFuelLevel = EnvironmentFuelLevel;
            newClone.EnvironmentScrapLevel = EnvironmentScrapLevel;
            newClone.EnvironmentBanditDanger = EnvironmentBanditDanger;
            newClone.EnvironmentTerrainAccessibility = EnvironmentTerrainAccessibility;
            newClone.EnvironmentCampFrequency = EnvironmentCampFrequency;
            newClone.EnvironmentMentalDanger = EnvironmentMentalDanger;
            newClone.EnvironmentAnimalDanger = EnvironmentAnimalDanger;
            newClone.EnvironmentTrapDanger = EnvironmentTrapDanger;
            newClone.EnvironmentRadiationDanger = EnvironmentRadiationDanger;
        }
        
        public object CloneObject()
        {
            Articy.Night.Features.EnvironmentFeature clone = new Articy.Night.Features.EnvironmentFeature();
            CloneProperties(clone);
            return clone;
        }
        
        public virtual bool IsLocalizedPropertyOverwritten(string aProperty)
        {
            return false;
        }
        
        #region property provider interface
        public void setProp(string aProperty, object aValue)
        {
            if ((aProperty == "EnvironmentName"))
            {
                EnvironmentName = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "EnvironmentType"))
            {
                EnvironmentType = ((EnvironmentType)(aValue));
                return;
            }
            if ((aProperty == "EnvironmentMinTemperature"))
            {
                EnvironmentMinTemperature = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "EnvironmentMaxTemperature"))
            {
                EnvironmentMaxTemperature = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "EnvironmentWaterLevel"))
            {
                EnvironmentWaterLevel = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "EnvironmentFoodLevel"))
            {
                EnvironmentFoodLevel = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "EnvironmentFuelLevel"))
            {
                EnvironmentFuelLevel = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "EnvironmentScrapLevel"))
            {
                EnvironmentScrapLevel = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "EnvironmentBanditDanger"))
            {
                EnvironmentBanditDanger = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "EnvironmentTerrainAccessibility"))
            {
                EnvironmentTerrainAccessibility = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "EnvironmentCampFrequency"))
            {
                EnvironmentCampFrequency = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "EnvironmentMentalDanger"))
            {
                EnvironmentMentalDanger = System.Convert.ToBoolean(aValue);
                return;
            }
            if ((aProperty == "EnvironmentAnimalDanger"))
            {
                EnvironmentAnimalDanger = System.Convert.ToBoolean(aValue);
                return;
            }
            if ((aProperty == "EnvironmentTrapDanger"))
            {
                EnvironmentTrapDanger = System.Convert.ToBoolean(aValue);
                return;
            }
            if ((aProperty == "EnvironmentRadiationDanger"))
            {
                EnvironmentRadiationDanger = System.Convert.ToBoolean(aValue);
                return;
            }
        }
        
        public Articy.Unity.Interfaces.ScriptDataProxy getProp(string aProperty)
        {
            if ((aProperty == "EnvironmentName"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(EnvironmentName);
            }
            if ((aProperty == "EnvironmentType"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(EnvironmentType);
            }
            if ((aProperty == "EnvironmentMinTemperature"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(EnvironmentMinTemperature);
            }
            if ((aProperty == "EnvironmentMaxTemperature"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(EnvironmentMaxTemperature);
            }
            if ((aProperty == "EnvironmentWaterLevel"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(EnvironmentWaterLevel);
            }
            if ((aProperty == "EnvironmentFoodLevel"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(EnvironmentFoodLevel);
            }
            if ((aProperty == "EnvironmentFuelLevel"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(EnvironmentFuelLevel);
            }
            if ((aProperty == "EnvironmentScrapLevel"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(EnvironmentScrapLevel);
            }
            if ((aProperty == "EnvironmentBanditDanger"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(EnvironmentBanditDanger);
            }
            if ((aProperty == "EnvironmentTerrainAccessibility"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(EnvironmentTerrainAccessibility);
            }
            if ((aProperty == "EnvironmentCampFrequency"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(EnvironmentCampFrequency);
            }
            if ((aProperty == "EnvironmentMentalDanger"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(EnvironmentMentalDanger);
            }
            if ((aProperty == "EnvironmentAnimalDanger"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(EnvironmentAnimalDanger);
            }
            if ((aProperty == "EnvironmentTrapDanger"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(EnvironmentTrapDanger);
            }
            if ((aProperty == "EnvironmentRadiationDanger"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(EnvironmentRadiationDanger);
            }
            return null;
        }
        #endregion
    }
}
