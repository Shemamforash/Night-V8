// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using UnityEngine;
using System.Collections.Generic;
using Articy.Unity;
using Articy.Unity.Interfaces;

namespace Articy.Night
{
    
    
    [Serializable()]
    public class OutgoingConnection : IArticyBaseObject, IOutgoingConnection, IObjectWithColor, IObjectWithTarget
    {
        
        [SerializeField()]
        private String mLabel;
        
        [SerializeField()]
        private Color mColor;
        
        [SerializeField()]
        private UInt64 mTargetPin;
        
        [SerializeField()]
        private ArticyValueArticyObject mTarget = new ArticyValueArticyObject();
        
        public String Label
        {
            get
            {
                return mLabel;
            }
            set
            {
                mLabel = value;
            }
        }
        
        public Color Color
        {
            get
            {
                return mColor;
            }
            set
            {
                mColor = value;
            }
        }
        
        public UInt64 TargetPin
        {
            get
            {
                return mTargetPin;
            }
            set
            {
                mTargetPin = value;
            }
        }
        
        public ArticyObject Target
        {
            get
            {
                return mTarget.GetValue();
            }
            set
            {
                mTarget.SetValue(value);
            }
        }
        
        private void CloneProperties(object aClone)
        {
            OutgoingConnection newClone = ((OutgoingConnection)(aClone));
            newClone.Label = Label;
            newClone.Color = Color;
            newClone.TargetPin = TargetPin;
            if ((mTarget != null))
            {
                newClone.mTarget = ((ArticyValueArticyObject)(mTarget.CloneObject()));
            }
        }
        
        public object CloneObject()
        {
            OutgoingConnection clone = new OutgoingConnection();
            CloneProperties(clone);
            return clone;
        }
        
        public virtual bool IsLocalizedPropertyOverwritten(string aProperty)
        {
            return false;
        }
    }
}
